swagger: '2.0'
info:
  description: >-
    Api Document
  version: 1.0.0
  title: prometheus
  contact:
    email: info@n-3.it
host: www.host.it
basePath: /lib/prometheus/V2
tags: 
  - name: PROMETHEUS
    description: PROMETHEUS
schemes: 
  - https 
  - http
paths:
  /prometheus:
    post:
      tags:
        - PROMETHEUS
      summary: Insert Prometheus
      description: ''
      operationId: savePrometheus
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/PrometheusRequest'
      responses:
        '200':
          description: Operazione riuscita
          schema:
            $ref: '#/definitions/PrometheusResponse'
        '403':
            description: Errore
            schema:
              $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - PROMETHEUS
      summary: Update di Prometheus
      description: ''
      operationId: updatePrometheus
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/PrometheusRequest'
      responses:
        '200':
          description: Operazione riuscita
          schema:
            $ref: '#/definitions/PrometheusResponse'
        '403':
            description: Errore
            schema:
              $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - PROMETHEUS
      summary: Estrazione della lista di Prometheus
      description: ''
      operationId: getListPrometheus
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Operazione riuscita
          schema:
            $ref: '#/definitions/PrometheusListResponse'
        '403':
          description: Errore
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - PROMETHEUS
      summary: Delete di Prometheus
      description: ''
      operationId: deletePrometheus
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/PrometheusRequest'
      responses:
        '200':
          description: Operazione riuscita
          schema:
            $ref: '#/definitions/GenericResponse'
        '403':
          description: Errore
          schema:
            $ref: '#/definitions/ErrorResponse'
    patch:
      tags:
        - PROMETHEUS
      summary: Erase di Prometheus
      description: ''
      operationId: erasedPrometheus
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/PrometheusRequest'
      responses:
        '200':
          description: Operazione riuscita
          schema:
            $ref: '#/definitions/PrometheusResponse'
        '403':
          description: Errore
          schema:
            $ref: '#/definitions/ErrorResponse'
  /prometheus/{prometheusId}:
    get:
      tags:
        - PROMETHEUS
      summary: Estrazione di Prometheus
      description: ''
      operationId: getPrometheus
      produces:
        - application/json
      parameters:
      - name: "prometheusId"
        in: "path"
        description: "ID of prometheus to return "
        required: true
        type: "integer"
        format: "int64"
      responses:
        '200':
          description: Operazione riuscita
          schema:
            $ref: '#/definitions/PrometheusResponse'
        '403':
          description: Errore
          schema:
            $ref: '#/definitions/ErrorResponse'
  /prometheus/datatable/list:
    get:
      tags:
        - PROMETHEUS
      summary: Datatable
      description: ''
      operationId: getDatatablePrometheus
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Operazione riuscita
          schema:
            $ref: '#/definitions/DatatableResponse'
        '403':
          description: Errore
          schema:
            $ref: '#/definitions/ErrorResponse'
  /prometheus/autocomplete/{columnName}:
    get:
      tags:
        - PROMETHEUS
      summary: Autocomplete
      description: ''
      operationId: getAutocompleteValuesPrometheus
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      - name: columnName
        in: "path"
        description: Name of the DB column to get value list
        required: true
        type: "string"
      responses:
        '200':
          description: Operazione riuscita
          schema:
            $ref: '#/definitions/AutocompleteResponse'
        '403':
          description: Errore
          schema:
            $ref: '#/definitions/ErrorResponse'
  /prometheus/foreignkey/{columnName}:
    get:
      tags:
        - PROMETHEUS
      summary: Autocomplete
      description: ''
      operationId: getForeignKeyValuesPrometheus
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      - name: columnName
        in: "path"
        description: Name of the DB column to get value list
        required: true
        type: "string"
      responses:
        '200':
          description: Operazione riuscita
          schema:
            $ref: '#/definitions/AutocompleteResponse'
        '403':
          description: Errore
          schema:
            $ref: '#/definitions/ErrorResponse'
definitions:
  #Response Object 
  GenericResponse:
    type: object
    properties:
      result:
        type: boolean
  #Datatable Object 
  DatatableResponse:
    type: object
    properties:
      aaData:
        type: array
        items:
          type: array
          items:
            type: object
      iTotalDisplayRecords:
        type: string
      iTotalRecords:
        type: string
      sEcho:
        type: number
  #Autocomplete Object 
  AutocompleteResponse:
    type: object
    properties:
      results:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            text:
              type: string
  ErrorResponse:
    type: object
    properties:
      result:
        type: boolean
      message:
        type: string
      code:
        type: string
  PrometheusResponse:
    type: object
    properties:
      result:
        type: boolean
      data:
        $ref: "#/definitions/Prometheus"
  PrometheusListResponse:
    type: object
    properties:
      result:
        type: boolean
      data:
        $ref: "#/definitions/PrometheusList"
#Aggregate Object
  PrometheusList:
    type: array 
    items:
      $ref: "#/definitions/Prometheus"
  PrometheusRequest:
    type: object
    properties:
      token:
        type: string
      data:
        $ref: "#/definitions/Prometheus"
  #Class Object
  Prometheus:
    type: object
    properties:
      id: 
        type: number
      name: 
        type: string
      image: 
        type: string
      command: 
        type: string
      status: 
        type: string
      created: 
        type: string

