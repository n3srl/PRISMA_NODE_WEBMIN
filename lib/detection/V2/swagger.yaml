swagger: '2.0'
info:
  description: >-
    Api Document
  version: 1.0.0
  title: detection
  contact:
    email: info@n-3.it
host: www.host.it
basePath: /lib/detection/V2
tags: 
  - name: DETECTION
    description: DETECTION
schemes: 
  - https 
  - http
paths:
  /detection:
    post:
      tags:
        - DETECTION
      summary: Insert Detection
      description: ''
      operationId: saveDetection
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/DetectionRequest'
      responses:
        '200':
          description: Operazione riuscita
          schema:
            $ref: '#/definitions/DetectionResponse'
        '403':
            description: Errore
            schema:
              $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - DETECTION
      summary: Update di Detection
      description: ''
      operationId: updateDetection
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/DetectionRequest'
      responses:
        '200':
          description: Operazione riuscita
          schema:
            $ref: '#/definitions/DetectionResponse'
        '403':
            description: Errore
            schema:
              $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - DETECTION
      summary: Estrazione della lista di Detection
      description: ''
      operationId: getListDetection
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Operazione riuscita
          schema:
            $ref: '#/definitions/DetectionListResponse'
        '403':
          description: Errore
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - DETECTION
      summary: Delete di Detection
      description: ''
      operationId: deleteDetection
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/DetectionRequest'
      responses:
        '200':
          description: Operazione riuscita
          schema:
            $ref: '#/definitions/GenericResponse'
        '403':
          description: Errore
          schema:
            $ref: '#/definitions/ErrorResponse'
    patch:
      tags:
        - DETECTION
      summary: Erase di Detection
      description: ''
      operationId: erasedDetection
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: data
          required: true
          schema:
            $ref: '#/definitions/DetectionRequest'
      responses:
        '200':
          description: Operazione riuscita
          schema:
            $ref: '#/definitions/DetectionResponse'
        '403':
          description: Errore
          schema:
            $ref: '#/definitions/ErrorResponse'
  /detection/{detectionId}:
    get:
      tags:
        - DETECTION
      summary: Estrazione di Detection
      description: ''
      operationId: getDetection
      produces:
        - application/json
      parameters:
      - name: "detectionId"
        in: "path"
        description: "ID of detection to return "
        required: true
        type: "integer"
        format: "int64"
      responses:
        '200':
          description: Operazione riuscita
          schema:
            $ref: '#/definitions/DetectionResponse'
        '403':
          description: Errore
          schema:
            $ref: '#/definitions/ErrorResponse'
  /detection/datatable/list:
    get:
      tags:
        - DETECTION
      summary: Datatable
      description: ''
      operationId: getDatatableDetection
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: Operazione riuscita
          schema:
            $ref: '#/definitions/DatatableResponse'
        '403':
          description: Errore
          schema:
            $ref: '#/definitions/ErrorResponse'
  /detection/autocomplete/{columnName}:
    get:
      tags:
        - DETECTION
      summary: Autocomplete
      description: ''
      operationId: getAutocompleteValuesDetection
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      - name: columnName
        in: "path"
        description: Name of the DB column to get value list
        required: true
        type: "string"
      responses:
        '200':
          description: Operazione riuscita
          schema:
            $ref: '#/definitions/AutocompleteResponse'
        '403':
          description: Errore
          schema:
            $ref: '#/definitions/ErrorResponse'
  /detection/foreignkey/{columnName}:
    get:
      tags:
        - DETECTION
      summary: Autocomplete
      description: ''
      operationId: getForeignKeyValuesDetection
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      - name: columnName
        in: "path"
        description: Name of the DB column to get value list
        required: true
        type: "string"
      responses:
        '200':
          description: Operazione riuscita
          schema:
            $ref: '#/definitions/AutocompleteResponse'
        '403':
          description: Errore
          schema:
            $ref: '#/definitions/ErrorResponse'
definitions:
  #Response Object 
  GenericResponse:
    type: object
    properties:
      result:
        type: boolean
  #Datatable Object 
  DatatableResponse:
    type: object
    properties:
      aaData:
        type: array
        items:
          type: array
          items:
            type: object
      iTotalDisplayRecords:
        type: string
      iTotalRecords:
        type: string
      sEcho:
        type: number
  #Autocomplete Object 
  AutocompleteResponse:
    type: object
    properties:
      results:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            text:
              type: string
  ErrorResponse:
    type: object
    properties:
      result:
        type: boolean
      message:
        type: string
      code:
        type: string
  DetectionResponse:
    type: object
    properties:
      result:
        type: boolean
      data:
        $ref: "#/definitions/Detection"
  DetectionListResponse:
    type: object
    properties:
      result:
        type: boolean
      data:
        $ref: "#/definitions/DetectionList"
#Aggregate Object
  DetectionList:
    type: array 
    items:
      $ref: "#/definitions/Detection"
  DetectionRequest:
    type: object
    properties:
      token:
        type: string
      data:
        $ref: "#/definitions/Detection"
  #Class Object
  Detection:
    type: object
    properties:
      id: 
        type: number
      name: 
        type: string
      image: 
        type: string
      command: 
        type: string
      status: 
        type: string
      created: 
        type: string

